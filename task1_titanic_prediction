#Importing libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.impute import SimpleImputer

#loading dataset
data = pd.read_csv("Titanic-Dataset.csv")
data.head()

#excluding unecessary columns
data.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)

#checking for missing values
print(data.isnull().sum())

#handling missing values by median and mode
imputing = SimpleImputer(strategy = 'median')
data['Age'] = imputing.fit_transform(data['Age'].values.reshape(-1,1))
data['Embarked'].fillna(data['Embarked'].mode()[0],inplace = True)

#converting categorical variables to dummy variables
data = pd.get_dummies(data,columns = ['Sex','Embarked'],drop_first = True)

#splitting to features and target variables
X = data.drop('Survived',axis = 1)
Y = data['Survived']

#splitting into training and testing tests
X_train,X_test,Y_train,Y_test = train_test_split(X,Y, test_size = 0.2, random_state = 42)

#standardising features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

#training logistic regression model
model = LogisticRegression()
model.fit(X_train,Y_train)

#target variable predicting
y_pred = model.predict(X_test)

#model evaluation
accuracy = accuracy_score(Y_test,y_pred)
print('accuracy:',accuracy)
print('confusion matrix:')
print(confusion_matrix(Y_test,y_pred))
