#importing necessary libraries
import os
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.metrics import mean_squared_error

#loading dataset
data = pd.read_csv("IMDb_Movies_India.csv",encoding = 'latin1')
data.head()

#preprocessing - removal of missing values from dataset
data = data.dropna()
#no need of performing feature emgineering in this example

#splitting data into features and target variable
X = data[['Genre','Director','Actor 1','Actor 2','Actor 3']]
y = data['Rating']

#splitting to training and testing sets
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 42)

#preprocessing for categorical variables using one hot encoding
preprocessor = ColumnTransformer(transformers = [
                                 ('cat',OneHotEncoder(),['Genre','Director','Actor 1','Actor 2','Actor 3']),
                                ], remainder = 'passthrough')


#Linear regression model
model = Pipeline(steps = [
    ('preprocessor' , preprocessor),
    ('regressor' , LinearRegression())
])


#model training
model.fit(X_train,y_train)

#model evaluation
try:
    y_pred = model.predict(X_test)
    print("Predictions:", y_pred)
except Exception as e:
    print("An error occurred during prediction:", e)


#making Prediction
try:
    rating_prediction = model.predict(new_movie)
    print("Predicted Rating:", rating_prediction)
except Exception as e:
    print("An error occurred during prediction:", e)



